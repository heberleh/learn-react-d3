{"version":3,"sources":["logo.svg","components/ReactD3/Header.js","components/Axis/Axis.js","components/Axis/Axes.js","components/Bars/Bars.js","components/ResponsiveWrapper.js","components/BarChart/BarChart.js","ComicsQueries.js","components/Bars/StackedBars.js","components/StackedBarChart/StackedBarChart.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","this","props","title","href","authorUrl","author","Component","Axis","renderAxis","axisType","concat","orient","axis","d3Axis","scale","tickSize","tickPadding","ticks","d3Select","axisElement","call","_this","type","ref","el","transform","translate","defaultProps","Axes","_ref","minSize","scales","margins","svgDimensions","yProps","dataModel","yScale","left","width","right","y","components_Axis_Axis","Bars","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","colorScale","scaleLinear","domain","maxValue","range","interpolate","interpolateLab","_this2","_this$props","xScale","getTooltipHtml","d","bandFunc","valueFunc","descriptionFunc","bars","data","map","key","x","height","bandwidth","fill","skill","total","data-tip","data-for","data-html","ResponsiveWrapper","ChartComponent","_Component","ResponsiveChart","state","containerWidth","fitParentContainer","bind","assertThisInitialized","inherits","createClass","value","window","addEventListener","removeEventListener","currentContainerWidth","chartContainer","getBoundingClientRect","setState","parentWidth","assign","shouldRenderChart","renderChart","BarChart","scaleBand","Math","max","apply","toConsumableArray","padding","bottom","top","components_Bars_Bars","dist_default","id","html","border","parsPadding","comicsDB","require","ComicsQueries","exec","name","urlFunc","url","ability","description","newData","allGenders","Set","allGendersTotals","forEach","row","abilityLabel","values","genderLabel","node","add","Array","from","sort","b","rows","i","gender","push","d1","d2","reduce","labels","StackedBars","scaleOrdinal","colorsVector","label","val","parseInt","getX","j","scaleVal","getxval","marginleft","_this3","renderStackedBar","StackedBarChart","Bars_StackedBars","App","components_ReactD3_Header","class","components_BarChart_BarChart","skillsDistribution","components_StackedBarChart_StackedBarChart","skillsDistributionByGender","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0cb4bd49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../../logo.svg';\n\nimport \"./Header.css\"\n\n/**\n * The header of the website\n *\n * @version 1.0.0\n * @author [Henry Heberle](https://github.com/heberleh)\n */\nclass Header extends Component{\n    static propTypes = {\n        /**\n         * The title of the webpage\n         */\n        title: PropTypes.string.isRequired,\n        /**\n         * The author of the webpage\n         */\n        author: PropTypes.string,\n        /** \n         * The author's webpage\n         */\n        authorUrl: PropTypes.string\n\n        // React Style Guide: https://react-styleguidist.js.org/docs/documenting.html\n    }\n\n    render(){\n        return(\n            <div className=\"header d-flex justify-content-center align-self-stretch\">\n                <div className=\" d-flex justify-content-center align-items-center\">\n                    <img src={logo} className=\"logo\" alt=\"logo\" />\n                    <span>{this.props.title}</span>\n                </div>                \n                <div className=\"d-flex justify-content-right align-items-center\">\n                    <span className=\"author\">\n                        <a href={this.props.authorUrl}>\n                             {this.props.author} \n                        </a>\n                    </span>\n                </div>\n            </div>           \n        );\n    }\n\n}\n\nexport default Header;","import React, { Component } from 'react'\nimport * as d3Axis from 'd3-axis'\nimport { select as d3Select } from 'd3-selection'\nimport PropTypes from 'prop-types'\n\nimport './Axis.css'\n\nclass Axis extends Component{\n\n    componentDidMount() {\n        this.renderAxis()\n    }\n    \n    componentDidUpdate() {\n        this.renderAxis()\n    }\n    \n    renderAxis(){\n        const axisType = `axis${this.props.orient}`\n\n        const axis = d3Axis[axisType]()\n                .scale(this.props.scale)\n                .tickSize(-this.props.tickSize)\n                .tickPadding(this.props.tickPadding)\n                .ticks(this.props.ticks)\n\n        d3Select(this.axisElement).call(axis)\n    }\n\n    render(){        \n        return (\n        <g\n            className={`Axis Axis-${this.props.orient} Axis-${this.props.scale.type}`}\n            ref={(el) => { this.axisElement = el; }}\n            transform={this.props.translate}\n          />\n        )\n    }\n\n}\n\nAxis.defaultProps = {\n   ticks: [4],\n   tickPadding: [12]\n}\n\nAxis.propTypes = {\n    ticks:  PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.array\n    ]),\n    tickPadding : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.array\n    ]),\n    orient: PropTypes.string.isRequired,\n    scale: PropTypes.func.isRequired,\n    translate: PropTypes.string.isRequired,\n    tickSize: PropTypes.number.isRequired\n}\n\nexport default Axis","\nimport React from 'react'\nimport Axis from './Axis'\n\nexport default ({minSize, scales, margins, svgDimensions, ticks, dataModel}) => {\n\n  // const xProps = {\n  //   orient: 'Bottom',\n  //   scale: scales.xScale,\n  //   translate: `translate(0, ${svgDimensions.height - margins.bottom})`,\n  //   tickSize: svgDimensions.height - margins.top - margins.bottom,\n  //   ticks: ticks.x.ticks,\n  //   tickPadding: ticks.x.tickPadding\n  // }\n\n  const yProps = {\n    orient: 'Left',\n    scale: scales.yScale,\n    translate: `translate(${margins.left}, 0)`,\n    tickSize: svgDimensions.width - margins.left - margins.right,\n    ticks: ticks.y.ticks,\n    tickPadding: ticks.y.tickPadding\n  }\n\n  return (\n    <g>\n      {/* <Axis {...xProps} /> uncomment this and set up x-axis*/} \n      <Axis {...yProps} />\n    </g>\n  )\n\n}","import React, { Component } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { interpolateLab } from 'd3-interpolate'\n\n\nclass Bars extends Component{\n\n    constructor(props) {\n        super(props)\n    \n        this.colorScale = scaleLinear()\n          .domain([0, this.props.maxValue/10, this.props.maxValue])\n          .range(['#E8895B', '#38397C', '#10101C'])\n          .interpolate(interpolateLab)\n      }\n    \n      render() {\n        const { scales, margins, dataModel} = this.props //, svgDimensions \n        const { xScale, yScale } = scales\n        //const { width, height } = svgDimensions\n    \n        function getTooltipHtml(d){\n          return \"<div style='max-width:200px'><b>\"+\n                  dataModel.bandFunc(d)+\"</b><br>\"+\n                  dataModel.valueFunc(d)+\n                  \"<br>Info: \"+dataModel.descriptionFunc(d)\n        }\n\n        const bars = (\n          dataModel.data.map(d =>           \n            <rect\n              key={dataModel.bandFunc(d)+dataModel.valueFunc(d)}\n              x={margins.left}\n              y={yScale(dataModel.bandFunc(d))}\n              width={dataModel.valueFunc(d)===0? 0: xScale(dataModel.valueFunc(d))}\n              height={yScale.bandwidth()}\n              fill={this.colorScale(dataModel.valueFunc(d))}\n              skill={dataModel.bandFunc(d)}\n              total={dataModel.valueFunc(d)}\n            \n              data-tip={getTooltipHtml(d)}\n              data-for='barTooltipBarChart'\n              data-html={true}\n            />,\n          )\n        )\n    \n        return (      \n          <g>{bars}</g>       \n        )\n      }\n\n}\n\nexport default Bars","import React, { Component } from 'react'\n\nexport default ChartComponent => (\n  class ResponsiveChart extends Component {\n    constructor(props) {\n      super(props)\n\n      this.state = {\n        containerWidth: null,\n      }\n\n      this.fitParentContainer = this.fitParentContainer.bind(this)\n    }\n\n    componentDidMount() {\n      this.fitParentContainer()\n      window.addEventListener('resize', this.fitParentContainer)\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('resize', this.fitParentContainer)\n    }\n\n    fitParentContainer() {\n      const { containerWidth } = this.state\n      const currentContainerWidth = this.chartContainer\n                                        .getBoundingClientRect()\n                                        .width\n\n      const shouldResize = containerWidth !== currentContainerWidth\n\n      if (shouldResize) {\n        this.setState({\n          containerWidth: currentContainerWidth,\n        })\n      }\n    }\n\n    renderChart() {\n      const parentWidth = this.state.containerWidth\n\n      return (\n        <ChartComponent {...this.props} width={parentWidth} />\n      )\n    }\n\n    render() {\n      const { containerWidth } = this.state\n      const shouldRenderChart = containerWidth !== null\n\n      return (\n        <div\n          ref={(el) => { this.chartContainer = el }}\n          className=\"Responsive-wrapper\"\n        >\n          {shouldRenderChart && this.renderChart()}\n        </div>\n      )\n    }\n  }\n)","//Based on this work:\n//https://medium.com/@caspg/responsive-chart-with-react-and-d3v4-afd717e57583\n\n\nimport React, {Component} from 'react'\nimport './BarChart.css'\nimport PropTypes from 'prop-types'\nimport {scaleLinear, scaleBand} from 'd3-scale'\nimport Axes from '../Axis/Axes'\nimport Bars from '../Bars/Bars'\nimport ResponsiveWrapper from '../ResponsiveWrapper'\nimport ReactTooltip from 'react-tooltip'\n\nclass BarChart extends Component{\n    constructor(props){        \n        super(props)\n        this.xScale = scaleLinear()\n        this.xScale.type = \"Linear\"\n\n        this.yScale = scaleBand()\n        this.yScale.type = \"Band\"\n    }    \n\n    render(){\n        const props = this.props\n        \n        const maxValue = Math.max(...props.dataModel.data.map(d=>props.dataModel.valueFunc(d)))  \n                \n        const yScale = this.yScale \n                        .padding([.5])                      \n                        .domain(props.dataModel.data.map(d => props.dataModel.bandFunc(d)))\n                        .range([props.height - props.margins.bottom, props.margins.top])\n               \n        const xScale = this.xScale\n                        .domain([0, maxValue])\n                        .range([0, props.width - props.margins.right - props.margins.left])\n\n        const ticks ={\n            x: {ticks:[5], tickPadding:6},\n            y: {ticks:[], tickPadding:12}\n        }\n\n        return (\n                <div>\n                    <svg width={props.width} \n                        height={props.height}>\n\n                        <Axes\n                            scales={{xScale, yScale}}\n                            margins={props.margins} \n                            svgDimensions={{width:props.width, height:props.height}} \n                            ticks={ticks}\n                            dataModel={props.dataModel}\n                        />\n\n                        <Bars                            \n                            scales={{xScale, yScale}}\n                            margins={props.margins}\n                            dataModel={props.dataModel}\n                            maxValue={maxValue}\n                            svgDimensions={{width:props.width, height:props.height}} \n                        />\n\n                    </svg>\n                    <ReactTooltip \n                            id='barTooltipBarChart'\n                            html={true} \n                            border={true}/>\n                </div>                \n            )\n    }\n}\n\nBarChart.defaultProps = {\n    width: 700,\n    height: 1200,\n    margins: {top: 50, right: 20, bottom: 100, left: 200 },\n    parsPadding: 0.5\n}\n\nBarChart.propTypes ={\n    dataModel: PropTypes.object.isRequired,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    margins: PropTypes.object,\n    barsPadding: PropTypes.number\n};\n\nexport default ResponsiveWrapper(BarChart);","const comicsDB = require('comics-characters-js-database/src/ComicsDB')\n\nclass ComicsQueries{\n\n    static charactersTotalSkills(){\n        let query = \"SELECT c.char AS url, c.charLabel AS name, COUNT(DISTINCT a.ability) AS total\\\n                     FROM character c JOIN abilities a ON a.char = c.char\\\n                     GROUP BY c.char, c.charLabel\\\n                     ORDER BY total\\\n                     LIMIT 500\"\n\n        return {\n            data: comicsDB.exec(query), \n            bandFunc: d=>d.name, \n            valueFunc: d=>d.total, \n            urlFunc: d=>d.url\n        }\n    }\n    \n    static skillsDistribution(){\n        let query = \"SELECT LOWER (a.abilityLabel) AS ability, COUNT(c.char) AS total, a.abilityDescription AS description\\\n                     FROM character c JOIN abilities a ON a.char = c.char\\\n                     GROUP BY LOWER (a.abilityLabel), a.abilityDescription\\\n                     ORDER BY total\"\n\n        return {\n            data: comicsDB.exec(query), \n            bandFunc: d=>d.ability, \n            valueFunc: d=>d.total, \n            urlFunc: d=>d.url,\n            descriptionFunc: d=>d.description\n            }\n    }\n\n    static skillsDistributionByGender(){\n        \n        let query = `SELECT LOWER (a.abilityLabel) AS abilityLabel,\\\n                            a.abilityDescription   AS description,\\\n                            LOWER (g.genderLabel)  AS genderLabel,\\\n                            COUNT(c.char)          AS total\\\n                     FROM character c \n                            JOIN      abilities a ON a.char = c.char\\\n                            LEFT JOIN gender    g ON c.char = g.char\\\n                     GROUP BY LOWER (a.abilityLabel), a.abilityDescription, LOWER (g.genderLabel)\\\n                     ORDER BY abilityLabel`\n\n\n        let data = comicsDB.exec(query)        \n        let newData = {}\n        let allGenders = new Set()\n        let allGendersTotals = {}        \n        data.forEach(row => {\n            if (row.abilityLabel in newData){\n                newData[row.abilityLabel].values[row.genderLabel] = row.total\n            } else{\n                let node = {values: {}, description: row.description}\n                node.values[row.genderLabel] = row.total\n                newData[row.abilityLabel] = node\n            }\n\n            !(row.genderLabel in allGenders) && allGenders.add(row.genderLabel)\n            row.genderLabel in allGenders? allGendersTotals += row.total : allGendersTotals[row.genderLabel] = row.total\n        });       \n\n        // Sort by gender\n        allGenders = Array.from(allGenders)\n        allGenders.sort((a,b) =>allGendersTotals[b]-allGendersTotals[a])        \n\n        let rows = []\n        for (let ability in newData){\n            let row = {description: newData[ability].description, ability: ability, values: []}\n            for (let i in allGenders){\n                let gender = allGenders[i]\n                if (gender in newData[ability].values){\n                    row.values.push(newData[ability].values[gender])\n                }else{\n                    row.values.push(0)\n                }\n            }\n            rows.push(row)\n        }\n        \n        // Sor by ability\n        rows.sort((d1, d2) => d1.values.reduce((a,b)=>a+b) - d2.values.reduce((a,b)=>a+b))\n        \n        return {\n            data: rows, \n            labels: allGenders,\n            bandFunc: d=>d.ability, \n            valueFunc: d=>d.values, \n            urlFunc: d=>'',\n            descriptionFunc: d=>d.description\n        }\n    }\n\n    static findGenders(){\n        let query = \"SELECT DISTINCT genderLabel from gender\"\n        return {data: comicsDB.exec(query)}\n        // == Result == kown = []\n        // male     \n        // male organism\n        // female   \n        // female organism\n        // neutral sex\n        // hermaphrodite\n        // genderfluid\n        // transgender female\n        // agender\n        // t1331922231\n        // t1300761634\n        // non-binary   \n        // t1435955685\n    }\n}\n\nexport default ComicsQueries;","import React, { Component } from 'react'\nimport { scaleOrdinal } from 'd3-scale'\n\n\n\nclass StackedBars extends Component{\n\n    constructor(props) {\n        super(props)\n    \n        this.colorScale = scaleOrdinal()\n                          .domain(this.props.dataModel.labels)\n                          .range(this.props.colorsVector)    \n      }\n    \n      renderStackedBar(d){\n        const { scales, margins, dataModel } = this.props\n        const { xScale, yScale } = scales        \n\n        let title = dataModel.bandFunc(d)\n        let description = dataModel.descriptionFunc(d)\n\n        let values = dataModel.valueFunc(d)              \n        let labels = dataModel.labels\n\n        let total = values.reduce((a,b)=>a+b)\n        \n        function getTooltipHtml(title, label, val, description){\n          return \"<div style='max-width:300px'><b>\"+\n            title+\" (\"+label+\")</b><br>\"+\n            val+\"/\"+total+\" = \"+parseInt((val/total)*1000,10)/10+\"%<br>Info: \"+\n            description\n        }\n\n        function getX(i){\n          let x = 0;\n          for (let j = 0; j < i; j++){\n            if (values[j] !== 0) x += xScale(values[j])\n          }\n          return x\n        }\n\n        return (values.map((val, i) => {\n          \n          if (val === 0) return \"\";\n          \n          return <rect\n            key={title+labels[i]+val}\n\n            val={val}\n            values={values}\n            scaleVal={xScale(val)}\n            getxval={ getX(i)} \n            marginleft={margins.left}    \n                   \n            x={margins.left + getX(i)}\n            width={xScale(val)} // -margins.left ??\n            \n            y={yScale(dataModel.bandFunc(d))}                \n            height={yScale.bandwidth()}\n            \n            fill={this.colorScale(labels[i])}\n          \n            data-tip={getTooltipHtml(title, labels[i], val, description)}\n            data-for='barTooltipStackedBarChart'\n            data-html={true}\n            />\n          }\n        ))\n      }\n\n      render() {\n        const bars = (          \n          <g>{this.props.dataModel.data.map(d => <g>{this.renderStackedBar(d)}</g>)}</g>\n        )\n    \n        return (      \n          <g>{bars}</g>       \n        )\n      }\n}\n\nexport default StackedBars","//Based on this work:\n//https://medium.com/@caspg/responsive-chart-with-react-and-d3v4-afd717e57583\n\n\nimport React, {Component} from 'react'\nimport './StackedBarChart.css'\nimport PropTypes from 'prop-types'\nimport {scaleLinear, scaleBand} from 'd3-scale'\nimport Axes from '../Axis/Axes'\nimport StackedBars from '../Bars/StackedBars'\nimport ResponsiveWrapper from '../ResponsiveWrapper'\nimport ReactTooltip from 'react-tooltip'\n\nclass StackedBarChart extends Component{\n    constructor(props){        \n        super(props)\n        this.xScale = scaleLinear()\n        this.xScale.type = \"Linear\"\n\n        this.yScale = scaleBand()\n        this.yScale.type = \"Band\"\n    }    \n\n    render(){\n        const props = this.props\n        \n        const maxValue = Math.max(...props.dataModel.data.map(\n                                        // list of values [3, 4, 5] :: [label1, label2, label3]\n                                        d=>props.dataModel.valueFunc(d) \n                                                .reduce((a,b)=>a+b))) // sum values\n                \n        const yScale = this.yScale \n                        .padding([.5])                      \n                        .domain(props.dataModel.data.map(d => props.dataModel.bandFunc(d)))\n                        .range([props.height - props.margins.bottom, props.margins.top])\n               \n        const xScale = this.xScale\n                        .domain([0, maxValue])\n                        .range([0, props.width - props.margins.right - props.margins.left])\n\n        const ticks ={\n            x: {ticks:[6], tickPadding:12},\n            y: {ticks:[6], tickPadding:12}\n        }\n\n        return (\n                <div>\n                    <svg width={props.width} \n                        height={props.height}>\n\n                        <Axes\n                            scales={{xScale, yScale}}\n                            margins={props.margins} \n                            svgDimensions={{width:props.width, height:props.height}} \n                            ticks={ticks}\n                            dataModel={props.dataModel}\n                        />\n\n                        <StackedBars\n                                                                // #5cb5d8 #61f574 #f17341\n                            colorsVector={['#2a2b83', '#ac4a59', '#5cb5d8', '#61f574', '#f17341']}//['#8D3340', '#E8895B', '#858685', '#A2DA3D', '#38397C', '#10101C']}\n                            scales={{xScale, yScale}}\n                            margins={props.margins}\n                            dataModel={props.dataModel}\n                            maxValue={maxValue}\n                            svgDimensions={{width:props.width, height:props.height}} \n                        />\n\n                    </svg>\n                    <ReactTooltip \n                            id='barTooltipStackedBarChart'\n                            html={true} \n                            border={true}/>\n                </div>                \n            )\n    }\n}\n\nStackedBarChart.defaultProps = {\n    width: 700,\n    height: 1200,\n    margins: {top: 50, right: 20, bottom: 100, left: 200 },\n    parsPadding: 0.5\n}\n\nStackedBarChart.propTypes ={\n    dataModel: PropTypes.object.isRequired,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    margins: PropTypes.object,\n    barsPadding: PropTypes.number\n};\n\nexport default ResponsiveWrapper(StackedBarChart);","import React, { Component } from 'react'\nimport './App.css'\nimport Header from './components/ReactD3/Header'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\nimport BarChart from './components/BarChart/BarChart'\n\nimport ComicsQueries from './ComicsQueries'\nimport StackedBarChart from './components/StackedBarChart/StackedBarChart';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.title = \"D3 & React - Comics Abilities\";\n    this.author = \"Henry Heberle\"\n    this.authorUrl = \"https://heberleh.github.io\"\n  }\n  \n  render() {\n\n\n    return (\n      <div className=\"App\">\n        <Header title={this.title} author={this.author} authorUrl={this.authorUrl}/>\n       \n       <div class=\"row\">\n\n        <div class=\"col-md-3\">          \n          <BarChart dataModel={ComicsQueries.skillsDistribution()}/>        \n        </div>\n\n        <div class=\"col-md-9\">          \n          <StackedBarChart dataModel={ComicsQueries.skillsDistributionByGender()}/> \n        </div>\n\n       </div>\n       \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}